(()=>{var a=class{constructor(){this.ctx=null,this.audioBuffer={},this.gainNodes=[],this.setupContext()}getFilePath(){let e="/tutorials/midi/audio",t=PQ_MIDI.config&&PQ_MIDI.config.audio&&PQ_MIDI.config.audio.path;return t?(e=PQ_MIDI.config.audio.path,e.charAt(e.length-1)=="/"&&e.slice(0,-1),e):e}setupContext(){const e=window.AudioContext||window.webkitAudioContext;this.ctx=new e,document.addEventListener("visibilitychange",e=>{document.visibilityState==="visible"?this.ctx.resume():this.ctx.suspend()})}getContext(){return this.ctx}getAudioForPitch(e){return this.audioBuffer[e]}hasResource(e){return e in this.audioBuffer}checkAndLoadResources(e){let t=[];for(const n of e){if(this.hasResource(n))continue;t.push(this.loadResource(n))}const n=t.length>0;if(n){const e=50,n=new Promise(t=>{setTimeout(()=>{t("resolved")},e)});t.push(n)}return Promise.all(t)}loadResource(e){const s=e.replace("#","p"),o=this.getFilePath()+"/"+s+".ogg",t=new XMLHttpRequest;t.open("GET",o,!0),t.responseType="arraybuffer";const n=this;return new Promise((s,o)=>{t.onload=function(){let t=this.response.byteLength<=24;if(t)return;n.getContext().decodeAudioData(this.response,function(t){n.audioBuffer[e]=t,s(!0)},function(e){console.warn(e),o(!1)})},t.onerror=function(){o(!1)},t.send()})}getGainNodeWithCreate(e){if(e<0)return console.error("Can't play sound at track ",e);if(e<this.gainNodes.length)return this.gainNodes[e];for(;this.gainNodes.length<=e;){const e=this.ctx.createGain();e.connect(this.ctx.destination),this.gainNodes.push(e)}return this.gainNodes[e]}playSound(e,t){this.ctx.state==="suspended"&&this.ctx.resume();const s=this.getGainNodeWithCreate(e);var n=this.ctx.createBufferSource();n.buffer=this.getAudioForPitch(t.pitch),n.connect(s),n.start();const i=this.ctx.currentTime,o=i+t.duration;n.stop(o);const a=t.convertVolumeToGain(t.volumeStart),r=t.convertVolumeToGain(t.volumeEnd);return s.gain.exponentialRampToValueAtTime(a,i+.03),s.gain.setValueAtTime(r,o-.03),s.gain.exponentialRampToValueAtTime(1e-4,o),n}},c=new a,n=c,i=class{constructor(e={}){this.pitchInput="absolute",this.timeInput="absolute",this.tempoBPM=120,this.timeSignature="4/4",this.strict=!1,this.transpose=0,this.metronome=!1,this.metronomeVolume=85,this.loop=!1,this.snapToGrid=!0,this.gridResolution=1,this.MEASURE_BOUNDS={min:1,max:6},this.BPM_BOUNDS={min:10,max:300},this.MIN_PITCH_SPREAD=5,this.GRID_RESOLUTION_BOUNDS={min:1,max:8},this.AUDIO_BOUNDS={min:"C2",max:"C6"},this.NUM_TRACKS_BOUNDS={min:1,max:8};for(var t in e){if(!e[t])continue;this[t]=e[t]}this.generateNotes(),this.generateNotesWithAvailableAudio()}generateNotes(){const e=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],t=[1,2,3,4,5,6];this.allNotes=[];for(let n=0;n<t.length;n++)for(let s=0;s<e.length;s++)this.allNotes.push(e[s]+t[n].toString())}generateNotesWithAvailableAudio(){const e=this.allNotes.indexOf(this.AUDIO_BOUNDS.min),t=this.allNotes.indexOf(this.AUDIO_BOUNDS.max);this.allNotesAudio=this.allNotes.slice(e,t)}getAllNotesWithAvailableAudio(){return this.allNotesAudio}getAllNotes(){return this.allNotes}clampPitchToAvailableAudio(e){if(this.getAllNotesWithAvailableAudio().includes(e))return e;const t=this.allNotes.indexOf(e),n=this.allNotes.indexOf(this.AUDIO_BOUNDS.min);return t<=n?this.AUDIO_BOUNDS.min:this.AUDIO_BOUNDS.max}clampNote(e){return Math.max(Math.min(e,this.allNotes.length-1),0)}getNoteIndex(e){return this.allNotes.indexOf(e)}convertPitchInput(e,t){const s=this.getNoteIndex(e);let o=s==-1;if(o)return e;let n=this.pitchInput;if(t==null&&n=="relative"&&(n="absolute"),n=="absolute"){let t=this.clampNote(this.getNoteIndex(e)+this.transpose);return this.allNotes[t]}if(n=="relative"){let n=this.getNoteIndex(t),s=e[0]=="^",o=e[0]=="_";return s?n+=parseInt(e.substring(1)):o&&(n-=parseInt(e.substring(1))),n=this.clampNote(n),this.allNotes[n]}}convertTimeInput(e,t){let n=this.timeInput;if(t==null&&n=="relative"&&(n="absolute"),n=="absolute")return e.length<=0&&(e="1"),parseInt(e)*this.getSecondsPerBeat();if(n=="relative"){e.length<=0&&(e="^0");let n=parseFloat(t)/this.getSecondsPerBeat(),s=e[0]=="^",o=e[0]=="_";return s&&(e=n+parseInt(e.substring(1))),o&&(e=n-parseInt(e.substring(1))),e=Math.min(Math.max(parseInt(e),1),32),e*this.getSecondsPerBeat()}if(n=="traditional"){e.length<=0&&(e="4");let s=this.getSecondsPerFullNote(),t=parseInt(e.replace(".","")),n=1/t;return e.charAt(e.length-1)=="."&&(n+=1/(t*2)),n*s}}isValidTimeSignature(e){const t=e.split("/");if(t.length!=2)return!1;const n=parseInt(t[0]);if(isNaN(n))return!1;const s=parseInt(t[1]);return!isNaN(s)}getTimeSignature(){return this.timeSignature}setTimeSignature(e){if(!this.isValidTimeSignature(e))return null;const t=null;return this.timeSignature=e,t}getPrettyTempoBPM(){let e=this.tempoBPM;for(;e>200;)e/=2;for(;e<40;)e*=2;return Math.round(e)}getTempoBPM(){return this.tempoBPM}setTempoBPM(e){if(isNaN(e))return;const t=Math.max(Math.min(e,this.BPM_BOUNDS.max),this.BPM_BOUNDS.min),n=this.tempoBPM/t;return this.tempoBPM=t,n}getGridSubdivisions(){return this.getSecondsPerBeat()*this.getGridResolution()}getSecondsPerBeat(){return 60/this.tempoBPM}getSecondsPerFullNote(){return this.getSecondsPerBeat()*this.getBeatType()}getSecondsPerMeasure(){return this.getSecondsPerBeat()*this.getBeatsPerMeasure()}getBeatsPerMeasure(){return parseInt(this.timeSignature.split("/")[0])}getBeatType(){return parseInt(this.timeSignature.split("/")[1])}isStartOfMeasure(e){const t=e/this.getSecondsPerMeasure(),n=Math.abs(Math.round(t)-t)<=.075;return n}isMeasureCorrect(e=!1,t){return!e||!this.strict||this.isStartOfMeasure(t)}areTracksAligned(e){if(!this.strict)return!0;let t=-1;for(const n of e){const s=n[n.length-1].timeEnd;if(t>0&&Math.abs(s-t)>.05)return!1;t=s}return!0}shouldLoop(){return this.loop}setLoop(e){this.loop=e}shouldSnap(){return this.snapToGrid}setSnap(e){this.snapToGrid=e}useMetronome(){return this.metronome}setMetronome(e){this.metronome=e}getGridResolution(){return this.gridResolution}setGridResolution(e){const t=this.GRID_RESOLUTION_BOUNDS;this.gridResolution=Math.min(Math.max(e,t.min),t.max)}},o=class{constructor(e){this.colorOffset=Math.round(Math.random()*360);for(var t in e){if(!e[t])continue;this[t]=e[t]}this.font={light:"#BBBBBB",dark:"#999999",size:30,family:"Dosis"},Object.assign(this.font,e.font||{}),this.pitch={barLight:"transparent",barDark:"#DDDDDD",emptyPitchesAround:2,textMargin:20,shadowSize:10,shadowColor:"#666666",verticalScale:1},Object.assign(this.pitch,e.pitch||{}),this.time={lineWidth:6,textMargin:20,cursorColor:"#0000FF",cursorWidth:6},Object.assign(this.time,e.time||{})}getTrackColor(e,t=0,n){const s=360/n,o=(this.colorOffset+s*e)%360,i=100,a=50+t,r="hsl("+o+", "+i+"%, "+a+"%)";return r}},e=class{constructor(e={}){this.x=e.x||0,this.y=e.y||0,this.neighbors=(e.neighbors||[]).slice(),this.connections=(e.connections||[]).slice(),this.metadata=null,e.metadata&&(this.metadata=Object.assign({},e.metadata))}clone(){return new e(this)}round(){return this.setXY(Math.round(this.x),Math.round(this.y))}setX(e=0){return this.x=e,this}setY(e=0){return this.y=e,this}fromXY(e,t){return this.setXY(e,t)}setXY(e,t){return this.set({x:e,y:t})}setFactor(e){return this.setXY(e,e)}set(t=new e){return this.setX(t.x),this.setY(t.y),this}moveX(e=0){return this.setX(this.x+e)}moveY(e=0){return this.setY(this.y+e)}moveXY(e,t){return this.move({x:e,y:t})}moveFactor(e){return this.moveXY(e,e)}add(t=new e){return this.move(t)}sub(t=new e){return this.add(t.clone().scaleFactor(-1))}move(t=new e){return this.moveX(t.x),this.moveY(t.y),this}scaleX(e=0){return this.setX(e*this.x)}scaleY(e=0){return this.setY(e*this.y)}scaleXY(e,t){return this.scale({x:e,y:t})}scaleFactor(e){return this.scaleXY(e,e)}scale(t=new e){return this.scaleX(t.x),this.scaleY(t.y),this}angle(){return Math.atan2(this.y,this.x)}negate(){return this.scaleFactor(-1)}normalize(){const e=this.length();return Math.abs(e)<=1e-4?this:this.scaleFactor(1/e)}random(){const t=Math.random()*2*Math.PI;return(new e).setXY(Math.cos(t),Math.sin(t))}clamp(t=new e,n=new e){return this.setX(Math.min(Math.max(this.x,t.x),n.x)),this.setY(Math.min(Math.max(this.y,t.y),n.y)),this}length(){return Math.sqrt(this.lengthSquared())}lengthSquared(){return Math.pow(this.x,2)+Math.pow(this.y,2)}distTo(t=new e){return Math.sqrt(this.distSquaredTo(t))}distSquaredTo(t=new e){return Math.pow(this.x-t.x,2)+Math.pow(this.y-t.y,2)}vecTo(t=new e){return(new e).setXY(t.x-this.x,t.y-this.y)}addNeighbor(t=new e){this.neighbors.push(t)}removeNeighbor(t=new e){const n=this.getNeighborIndex(t);if(n<0)return;this.neighbors.splice(n,1)}countNeighbors(){return this.neighbors.length}getNeighborIndex(e){return this.neighbors.indexOf(e)}hasNeighbor(e){return this.neighbors.includes(e)}canConnectTo(e){return this.hasNeighbor(e)}hasNeighbors(){return this.countNeighbors()>0}getNeighbors(){return this.neighbors.slice()}clearNeighbors(){this.neighbors=[]}addConnection(t=new e){this.connections.push(t)}removeConnection(t=new e){const n=this.getConnectionIndex(t);if(n<0)return;this.connections.splice(n,1)}countConnections(){return this.connections.length}getConnectionIndex(e){return this.connections.indexOf(e)}hasConnection(e){return this.connections.includes(e)}isConnectedTo(e){return this.hasConnection(e)}hasConnections(){return this.countConnections()>0}getConnections(){return this.connections.slice()}clearConnections(){this.connections=[]}setMetadata(e){this.metadata=e}getMetadata(){return this.metadata}},s=class{constructor(e,t){this.time=e,this.timeOffset=0,this.pitch=t}setTimeOffset(e){this.timeOffset=e}getTimeOffset(){return this.timeOffset}getTime(){return this.time}getPitch(){return this.pitch}},r=class{constructor(e,t,n){this.player=e,this.player.getContainer().addEventListener("refresh",e=>{this.refresh()}),this.config=t,this.visualConfig=n,this.pitchGrid={},this.timeGrid={},this.canvasBaseResolution={width:1920,height:1080},this.createCanvas(),this.refresh()}createCanvas(){const e=document.createElement("canvas");e.width=this.canvasBaseResolution.width,e.height=this.canvasBaseResolution.height,e.classList.add("midi-canvas"),e.style.width="100%",this.canvas=e,this.player.getContainer().appendChild(e)}setupGrid(){const i=this.visualConfig.pitch.emptyPitchesAround,e=this.player.tracks.getPitches(i,this.config).reverse(),n=e.length,a=this.config.getAllNotes().length;let s=60-25*(n/a);s*=this.visualConfig.pitch.verticalScale,this.canvas.height=s*n,this.pitchGrid={pitches:e,barHeight:this.canvas.height/e.length,barWidth:this.canvas.width};const t=this.player.tracks.getDuration(),o=this.config.getSecondsPerMeasure();this.timeGrid={duration:t,barHeight:this.canvas.height,subdivisions:this.config.getBeatsPerMeasure(),snapResolution:this.config.getGridResolution(),pixelsPerSecond:this.pitchGrid.barWidth/t,numMeasures:t/o,secondsPerMeasure:o},this.timeGrid.pixelsPerMeasure=this.pitchGrid.barWidth/this.timeGrid.numMeasures}refresh(e=!0){e&&this.setupGrid(),this.clearCanvas(),this.drawPitchGrid(),this.drawTimeGrid(),this.drawTracks(),this.drawTimeCursor()}setGridResolution(e){this.config.setGridResolution(e),this.player.requestRefresh()}getCanvasResolution(){return{width:this.canvas.width,height:this.canvas.height}}convertPixelsToSeconds(e){return e/this.timeGrid.pixelsPerSecond}getTimelineDataFromCanvasPos(e){const n=Math.floor(e.y/this.pitchGrid.barHeight);let t=this.pitchGrid.pitches[n];t=this.config.clampPitchToAvailableAudio(t);const o=e.x/this.pitchGrid.barWidth*this.timeGrid.duration;return new s(o,t)}getPosFromEvent(t){const n=new e,s=this.canvas.getBoundingClientRect();if(n.move({x:-s.left,y:-s.top}),t.type=="touchstart"||t.type=="touchmove"||t.type=="touchend"||t.type=="touchcancel"){var o=typeof t.originalEvent=="undefined"?t:t.originalEvent,i=o.touches[0]||o.changedTouches[0];n.move({x:i.clientX,y:i.clientY})}else(t.type=="mousedown"||t.type=="mouseup"||t.type=="mousemove"||t.type=="mouseover"||t.type=="mouseout"||t.type=="mouseenter"||t.type=="mouseleave"||t.type=="auxclick"||t.type=="contextmenu")&&n.move({x:t.clientX,y:t.clientY});const a=this.convertRealPosToCanvasPos(n);return a}convertRealPosToCanvasPos(t){const n=this.canvas.getBoundingClientRect(),s=this.getCanvasResolution(),o=(new e).setXY(s.width/n.width,s.height/n.height);return t.clone().scale(o)}convertCanvasPosToRealPos(t){const n=this.canvas.getBoundingClientRect(),s=this.getCanvasResolution(),o=(new e).setXY(n.width/s.width,n.height/s.height);return t.clone().scale(o)}getCanvas(){return this.canvas}clearCanvas(){const e=this.canvas.getContext("2d");e.clearRect(0,0,this.canvas.width,this.canvas.height)}drawTimeCursor(){const e=this.canvas.getContext("2d");let t=this.player.time,n=this.visualConfig.time.cursorWidth;e.fillStyle=this.visualConfig.time.cursorColor,e.fillRect(t*this.timeGrid.pixelsPerSecond,0,n,this.canvas.height)}drawPitchGrid(){const e=this.canvas.getContext("2d");let t=this.pitchGrid.barHeight,s=this.pitchGrid.barWidth,o=this.visualConfig.pitch.textMargin,n=this.visualConfig.font.size;for(const[i,a]of Object.entries(this.pitchGrid.pitches))e.fillStyle=i%2==0?this.visualConfig.pitch.barLight:this.visualConfig.pitch.barDark,e.fillRect(0,i*t,s,t),e.font=n+"px "+this.visualConfig.font.family,e.fillStyle=i%2==0?this.visualConfig.font.light:this.visualConfig.font.dark,e.fillText(a,o,i*t+n+.5*(t-n))}drawTimeGrid(){const e=this.canvas.getContext("2d");e.font=this.visualConfig.font.size+"px "+this.visualConfig.font.family,e.fillStyle=this.visualConfig.font.light;const n=this.visualConfig.time.textMargin,s=this.visualConfig.font.size,t=this.timeGrid.subdivisions*this.timeGrid.snapResolution;for(let o=0;o<this.timeGrid.numMeasures;o++)for(let i=0;i<t;i++){let c=i/t,a=(o+c)*this.timeGrid.pixelsPerMeasure,r=this.visualConfig.time.lineWidth;if(i!=0&&(r*=.33),e.fillRect(a,0,r,this.timeGrid.barHeight),i==0&&o!=0){let t=this.timeGrid.secondsPerMeasure*o;t=Math.round(t*10)/10,e.fillText(t+"s",a+n,0+s)}}}drawTracks(){const e=this.player.tracks.read();for(const[t,n]of Object.entries(e))this.drawTrack(t,n)}drawTrack(e,t){let n=this.canvas.getContext("2d");const o=this.pitchGrid.barHeight,a=this.timeGrid.pixelsPerSecond;let s=this.player.time;s<=.001&&(s=-1);const i=this.player.tracks.count(),r=this.player.interactor;for(const c of t){if(!c.useVisual)continue;n.fillStyle=this.visualConfig.getTrackColor(e,0,i),n.shadowBlur=this.visualConfig.pitch.shadowSize,n.shadowColor=this.visualConfig.pitch.shadowColor;const h=c.timeStart<=s&&c.timeEnd>=s,m=r&&r.isNoteSelected(c);let f=h||m;f&&(n.fillStyle=this.visualConfig.getTrackColor(e,30,i),n.shadowColor="black");const p=this.pitchGrid.pitches.indexOf(c.pitch),l=c.duration*a,d=c.timeStart*a,u=p*o;n.fillRect(d,u,l,o),n.lineWidth=4,n.strokeStyle=this.visualConfig.getTrackColor(e,-30,i),n.strokeRect(d,u,l,o)}n.shadowBlur=0,n.shadowColor="transparent"}},t=class{constructor(e,t,n){this.pitch=e,this.duration=n,this.timeStart=t,this.timeEnd=t+n,this.useAudio=!0,this.useVisual=!0,this.maxVolume=100,this.volumeStart=this.maxVolume,this.volumeEnd=this.maxVolume,this.playing=!1,this.shouldBeSilent()&&(this.useAudio=!1),this.shouldBeInvisible()&&(this.useVisual=!1)}clone(){const e=new t(this.pitch,this.timeStart,this.duration);return e.useAudio=this.useAudio,e.useVisual=this.useVisual,e.volumeStart=this.volumeStart,e.volumeEnd=this.volumeEnd,e}setPlaying(e){this.playing=e}isPlaying(){return this.playing}isEmpty(){return Math.abs(this.getDuration())<=.03}isReversed(){return this.timeEnd<this.timeStart-.03}putStartEndInCorrectOrder(){if(!this.isReversed())return;const e=this.timeStart;this.timeStart=this.timeEnd,this.timeEnd=e,this.recalculateDuration()}getDuration(){return this.duration}recalculateDuration(){this.duration=this.timeEnd-this.timeStart}stretchDuration(e){this.timeStart*=e,this.timeEnd*=e,this.recalculateDuration()}setPitch(e){this.pitch=e}getPitch(){return this.pitch}getTimeStart(){return this.timeStart}setTimeStart(e,t=!0){this.timeStart=e,t?this.timeEnd=this.timeStart+this.duration:this.recalculateDuration()}getTimeEnd(){return this.timeEnd}setTimeEnd(e,t=!0){this.timeEnd=e,t?this.timeStart=this.timeEnd-this.duration:this.recalculateDuration()}containsTime(e){return this.timeStart<=e&&e<=this.timeEnd}setVisual(e){this.useVisual=e}setAudio(e){this.useAudio=e}addTime(e){this.timeEnd+=e,this.duration+=e}setVolume(e){e=Math.max(Math.min(parseFloat(e),this.maxVolume),0),this.volumeStart=e,this.volumeEnd=e}convertVolumeToGain(e){return e/this.maxVolume}shouldBeInvisible(){return this.pitch=="R"}shouldBeSilent(){return this.pitch=="R"}},l=class{constructor(e,t){this.tracksParsed=[],this.duration=0,this.feedback=[],this.parse(e,t)}parse(e,n){this.tracksParsed=[],e=e.replace(/  |\r\n|\n|\r/gm,"");const s=e.split(":");for(const[d,i]of Object.entries(s)){const u=i.length<=0;if(u)continue;let e=0,o=[];const a=i.split(" "),h=a.length<=0;if(h)continue;let r=null,c=null,l=null;for(const i of a){const v=i.length<=0||!i.includes("/");if(v)continue;const m=i=="|";if(n.isMeasureCorrect(m,e)||this.addFeedback("Error! Invalid measure. Track "+d+"; Time "+e),m)continue;const s=i.split("/"),f=s[0],b=s[1],p=n.convertPitchInput(f,r),u=n.convertTimeInput(b,c);r=p,c=u;const h=new t(p,e,u),j=s.length>2;if(j){const e=s[2].length<=0?l:parseInt(s[2]);h.setVolume(e)}l=h.volumeEnd;const g=f=="";g&&o[o.length-1].addTime(u),g||o.push(h),e+=u}this.tracksParsed.push(o)}n.areTracksAligned(this.tracksParsed)||this.addFeedback("Error! Tracks have different lengths."),this.duration=this.getDuration()}getFeedback(){return this.feedback}addFeedback(e){this.feedback.push(e)}getNotesCopy(){const e=[];for(const n of this.tracksParsed){const t=[];for(const e of n)t.push(e.clone());e.push(t)}return e}getDuration(){if(this.duration>0)return this.duration;let e=0;for(const t of this.tracksParsed){let n=t[t.length-1].timeEnd;if(n<=e)continue;e=n}return this.duration=e,this.duration}},d=class{constructor(e,t){this.tracks=e,this.visualizer=t,this.clicked=!1,this.lastClickPos=null,this.noteSelected=null,this.noteSelectedTimeOffset=0,this.noteNewStart=0,this.NOTE_EDGE_GRAB_THRESHOLD=50,this.action=null,this.attachMouseEvents()}attachMouseEvents(){const e=this.visualizer.getCanvas();e.addEventListener("mousedown",this.onClickStart.bind(this),!0),e.addEventListener("touchstart",this.onClickStart.bind(this),!0),e.addEventListener("mousemove",this.onClickMove.bind(this),!0),e.addEventListener("touchmove",this.onClickMove.bind(this),!0),e.addEventListener("mouseup",this.onClickEnd.bind(this),!0),e.addEventListener("touchend",this.onClickEnd.bind(this),!0),e.addEventListener("mouseleave",this.onClickCancel.bind(this),!0),e.addEventListener("touchcancel",this.onClickCancel.bind(this),!0),e.addEventListener("auxclick",this.onAuxiliaryClick.bind(this),!0),e.addEventListener("contextmenu",this.onRightClick.bind(this),!0)}getTimelineDataUnderneathCursor(e){const n=this.visualizer.getPosFromEvent(e),t=this.visualizer.getTimelineDataFromCanvasPos(n);return t.setTimeOffset(this.noteSelectedTimeOffset),t}getNoteUnderneathCursor(e){const t=this.getTimelineDataUnderneathCursor(e),n=this.tracks.findNoteAtTimelineData(t);return n}createNewNoteFromTimelineData(e){const n=e.getTime(),s=this.tracks.snapToTimeGrid(n),o=new t(e.getPitch(),s,0);return o}onRightClick(e){return this.cancelEvent(e),!1}onAuxiliaryClick(e){const t=this.getNoteUnderneathCursor(e);return this.removeNote(t),this.cancelEvent(e),!1}cancelEvent(e){e.preventDefault(),e.stopPropagation()}onClickStart(e){if(this.clicked)return;this.cancelEvent(e),this.clicked=!0;const n=this.visualizer.getPosFromEvent(e);this.lastClickPos=n;const t=this.getTimelineDataUnderneathCursor(e);if(this.noteSelected=this.getNoteUnderneathCursor(e),this.noteSelectedTimeOffset=0,this.noteSelected){this.noteSelectedTimeOffset=this.noteSelected.getTimeStart()-t.getTime(),this.action="move";const n=this.noteSelected.getDuration();let e=this.visualizer.convertPixelsToSeconds(this.NOTE_EDGE_GRAB_THRESHOLD);const s=2*e>=.75*n;s&&(e=.25*n);const o=Math.abs(this.noteSelectedTimeOffset)<=e,i=Math.abs(this.noteSelectedTimeOffset)>=n-e;o&&(this.action="moveStart"),i&&(this.action="moveEnd")}else{this.action="create";const e=this.createNewNoteFromTimelineData(t);this.noteSelected=e,this.noteNewStart=e.getTimeStart(),this.tracks.addNote(e)}return!1}onClickMove(e){if(!this.clicked)return;if(!this.action)return;this.cancelEvent(e);const n=this.visualizer.getPosFromEvent(e);this.lastClickPos=n;const t=this.getTimelineDataUnderneathCursor(e);return this.action=="move"?this.moveNote(this.noteSelected,t):this.action=="moveStart"?this.moveNote(this.noteSelected,t,"start"):this.action=="moveEnd"?this.moveNote(this.noteSelected,t,"end"):this.action=="create"&&this.moveNote(this.noteSelected,t,"end"),!1}onClickEnd(e){if(!this.clicked)return;return this.cancelEvent(e),this.clicked=!1,this.lastClickPos=null,this.noteSelected&&(this.noteSelected.putStartEndInCorrectOrder(),this.noteSelected.isEmpty()&&this.removeNote(this.noteSelected)),this.noteSelected=null,this.noteSelectedTimeOffset=0,this.action="",this.tracks.onChange(),!1}onClickCancel(){if(!this.clicked)return;return this.onClickEnd(null),!1}isNoteSelected(e){return this.noteSelected==e}moveNote(e,t,n="both"){if(!e)return;this.tracks.moveNoteTo(e,t,n)}removeNote(e){if(!e)return;this.tracks.removeNote(e)}},u=class{constructor(e,t){this.player=e,this.config=t,this.editableLayer=0}readFromParser(e){this.lastParser=e,this.tracks=e.getNotesCopy(),this.duration=e.getDuration()}read(){return this.tracks}readNotes(){return this.tracks.flat()}count(){return this.tracks.length}getMetronomeChannel(){return this.count()}isEmpty(){return this.count()<=0||this.readNotes().length<=0}reset(){this.readFromParser(this.lastParser),this.player.requestRefresh()}getNumMeasures(){return Math.ceil(this.getDuration()/this.config.getSecondsPerMeasure())}getDuration(){return this.duration}stretchDuration(e){this.setDuration(this.duration*e)}setDuration(e){this.duration=e,this.onChange()}setDurationFromMeasures(e){const t=this.config.MEASURE_BOUNDS;e=Math.max(Math.min(e,t.max),t.min),this.setDuration(e*this.config.getSecondsPerMeasure())}getUniquePitches(){let e=new Set;for(const t of this.tracks)for(const n of t){if(!n.useAudio)continue;e.add(n.pitch)}return e.add("M"),Array.from(e)}getPitches(e=0,t){const a=t.getAllNotes(),o=this.config.MIN_PITCH_SPREAD;let n=1/0,s=-1;for(const e of this.tracks)for(const i of e){let o=t.getNoteIndex(i.pitch);if(o==-1)continue;o<n&&(n=o),o>s&&(s=o)}let i=Math.floor(.5*a.length);const r=Math.abs(s-n)<o;return n!=1/0&&s>=0&&r&&(i=Math.floor((n+s)*.5)),(this.isEmpty()||r)&&(n=i-Math.floor(.5*o),s=i+Math.ceil(.5*o)),n=t.clampNote(n-e),s=t.clampNote(s+e+1),a.slice(n,s)}noteMatchesTimelineData(e,t){return e.getPitch()==t.getPitch()&&!!e.containsTime(t.getTime())}findNoteAtTimelineData(e){for(const t of this.tracks)for(const n of t){if(!this.noteMatchesTimelineData(n,e))continue;return n}return null}moveNoteTo(e,t,n){e.setPitch(t.getPitch());let o=t.getTimeOffset(),i=t.getTime()+o;n=="end"&&(i-=o);const s=this.snapToTimeGrid(i);n=="both"?e.setTimeStart(s,!0):n=="start"?e.setTimeStart(s,!1):n=="end"&&e.setTimeEnd(s,!1),this.onChange()}snapToTimeGrid(e){if(!this.config.shouldSnap())return e;const t=this.config.getSecondsPerBeat()/this.config.getGridResolution();return Math.round(e/t)*t}addNote(e){this.tracks[this.editableLayer].push(e),this.onChange()}removeNote(e){if(!e)return;for(const t of this.tracks){const n=t.indexOf(e);if(n==-1)continue;t.splice(n,1);break}this.onChange()}clear(){this.tracks=[],this.onChange()}onChange(){this.player.requestRefresh()}setEditableLayer(e){const t=this.config.NUM_TRACKS_BOUNDS,n=Math.max(Math.min(e,t.max-1),t.min-1);if(n!=e)return!1;for(;this.count()<=e;)this.addTrack();return this.editableLayer=e,!0}addTrack(){this.tracks.push([]),this.onChange()}removeTrack(e){e=e??this.count()-1,this.tracks.splice(e,1),this.onChange()}sortTrack(e){e.sort((e,t)=>e.timeStart-t.timeStart)}stretchTempoByFactor(e){const t=this.readNotes();for(const n of t)n.stretchDuration(e);this.stretchDuration(e),this.onChange()}changeTimeSignature(){this.setDurationFromMeasures(this.getNumMeasures()),this.onChange()}resetStateForAllNotes(){const e=this.readNotes();for(const t of e)t.setPlaying(!1);for(const e of this.tracks)this.sortTrack(e)}getNotesThatStartPlaying(e){const t=[];for(const[n,s]of Object.entries(this.tracks))for(const o of s){if(o.isPlaying())continue;if(o.getTimeStart()>e)continue;if(o.getTimeEnd()<e)continue;const i={id:n,note:o};t.push(i)}return t}},h=class{constructor(e,t){this.player=e,this.createHTML(t)}createHTML(e){const s=document.createElement("div");this.player.getContainer().appendChild(s),s.classList.add("midi-player-metadata"),this.node=s;const o=document.createElement("div");o.classList.add("midi-ui-buttons"),s.appendChild(o);const i=document.createElement("button");o.appendChild(i),i.innerHTML="Play/Stop",i.title="Plays and stops the audio",i.classList.add("midi-button-play"),this.playButton=i;const a=document.createElement("button");o.appendChild(a),a.innerHTML="Clear",a.title="Removes the entire melody",a.addEventListener("click",e=>{this.player.clear()}),this.clearButton=a;const r=document.createElement("button");o.appendChild(r),r.innerHTML="Reset",r.title="Resets to the original melody",r.addEventListener("click",e=>{this.player.tracks.reset()}),this.resetButton=r;let t={node:o,text:"Loop?",title:"If enabled, loops the audio: when done, it immediately plays again from the start.",value:e.shouldLoop(),callback:t=>{e.setLoop(t)}};this.createToggleButton(t),t.text="Snap?",t.value=e.shouldSnap(),t.title="If enabled, you can only move/add/resize notes perfectly in line with the time grid.",t.callback=t=>{e.setSnap(t)},this.createToggleButton(t),t.text="Metronome?",t.value=e.useMetronome(),t.title="If enabled, a metronome clicks to help you with the beat",t.callback=t=>{e.setMetronome(t)},this.createToggleButton(t);const n=document.createElement("div");n.classList.add("midi-ui-inputs"),s.appendChild(n),t={node:n,text:"#Snap Lines",title:"Sets how fine the grid is (both visually and when snapping notes)",min:e.GRID_RESOLUTION_BOUNDS.min,max:e.GRID_RESOLUTION_BOUNDS.max,value:e.getGridResolution(),callback:e=>{this.player.visualizer.setGridResolution(e)}},this.addInputLabel(t);const l=this.player.tracks.getNumMeasures();t={node:n,text:"#Measures",title:"Sets the duration of the melody",min:e.MEASURE_BOUNDS.min,max:e.MEASURE_BOUNDS.max,value:l,callback:e=>{this.player.tracks.setDurationFromMeasures(e)}},this.addInputLabel(t),t={node:n,text:"Tempo",suffix:"BPM",title:"Sets the speed at which the melody is played",min:e.BPM_BOUNDS.min,max:e.BPM_BOUNDS.max,value:e.getTempoBPM(),callback:t=>{const n=e.setTempoBPM(t);this.player.tracks.stretchTempoByFactor(n)}},this.addInputLabel(t),t={node:n,text:"Time",suffix:"",type:"text",title:"Sets the time signature (without changing anything else)",value:e.getTimeSignature(),callback:t=>{const n=e.setTimeSignature(t);this.player.tracks.changeTimeSignature(n)}},this.addInputLabel(t),t={node:n,text:"Layer",suffix:"",title:"Selects the layer in which new notes are added. (Go higher to add more layers.)",value:this.player.tracks.count(),min:e.NUM_TRACKS_BOUNDS.min,max:e.NUM_TRACKS_BOUNDS.max,fakeEvent:!0,callback:(e,t)=>{const n=e-1,s=this.player.tracks.setEditableLayer(n);if(!s)return;const o=this.player.visualConfig.getTrackColor(n,0,this.player.tracks.count());t.style.backgroundColor=o}},this.addInputLabel(t);const c=document.createElement("div");s.appendChild(c),c.classList.add("midi-parse-feedback"),this.feedbackLabel=c}setFeedback(e){this.feedbackLabel.innerHTML=e}addInputLabel(e){const o=e.node||this.node,n=document.createElement("div");n.classList.add("midi-input-with-label"),o.appendChild(n);const i=e.title||"";n.title=i;let s=document.createElement("span");n.appendChild(s),s.innerHTML=e.text||"--";let t=document.createElement("input");n.appendChild(t),t.type=e.type||"number",t.min=e.min||0,t.max=e.max||100;const a=(t.min+t.max)*.5;if(t.value=e.value||a,e.suffix){let t=document.createElement("span");n.appendChild(t),t.innerHMTL=e.suffix}const r=e=>{},c=e.callback||r;t.addEventListener("input",e=>{let n=t.value;t.type=="number"&&(n=parseFloat(n)),c(n,t)}),e.fakeEvent&&this.fakeChangeInput(t)}setPlayButtonCallback(e){this.playButton.addEventListener("click",e)}fakeChangeInput(e){const t=new Event("input");e.dispatchEvent(t)}fakeToggleButton(e){const t=new Event("click");e.dispatchEvent(t)}createToggleButton(e){const t=document.createElement("button");t.innerHTML=e.text||"ON/OFF";const n=e.node||this.node;n.appendChild(t);const s=e.title||"";t.title=s;const o=e=>{},i=e.callback||o;t.addEventListener("click",e=>{t.dataset.toggled?t.dataset.toggled="":t.dataset.toggled="toggled";const n=t.dataset.toggled=="toggled";i(n)});const a=e.value||!1;this.fakeToggleButton(t),a||this.fakeToggleButton(t)}},m=class{constructor(e,t){this.id=e,this.node=t,this.enabled=!0,this.playing=!1,this.audio=[],this.time=0,this.prevTime=0,this.lastContextTime=0,PQ_MIDI.config||(PQ_MIDI.config={}),PQ_MIDI.config.audio||(PQ_MIDI.config.audio={});const n=this.node.getElementsByClassName("midi-data")[0],s=n.innerHTML.trim(),a={pitchInput:n.dataset.pitchinput,timeInput:n.dataset.timeinput,tempoBPM:parseInt(n.dataset.tempo),timeSignature:n.dataset.time,strict:n.dataset.strict,transpose:parseInt(n.dataset.transpose),metronome:n.dataset.metronome,metronomeVolume:PQ_MIDI.config.audio.metronomeVolume||66};this.config=new i(a),this.parser=new l(s,this.config),this.tracks=new u(this,this.config),this.tracks.readFromParser(this.parser),this.visualConfig=new o(PQ_MIDI.customConfig||{}),this.visualizer=new r(this,this.config,this.visualConfig),this.interactor=new d(this.tracks,this.visualizer),this.ui=new h(this,this.config),this.ui.setFeedback(this.parser.getFeedback()),this.ui.setPlayButtonCallback(this.toggle.bind(this))}getContainer(){return this.node}async toggle(){if(!this.enabled)return;return this.enabled=!1,this.ui.setFeedback("Downloading audio ..."),await n.checkAndLoadResources(this.tracks.getUniquePitches()),this.ui.setFeedback(this.parser.getFeedback()),this.enabled=!0,this.playing?this.stop():this.play()}play(){this.playing=!0,this.audio=[],this.tracks.resetStateForAllNotes(),this.prevTime=this.time,this.lastContextTime=this.getCurContextTime(),this.clickMetronome(),this.onUpdate(),window.requestAnimationFrame(this.progress.bind(this))}getCurContextTime(){return n.getContext().currentTime}async progress(){if(!this.playing)return;const e=this.getCurContextTime(),t=e-this.lastContextTime;this.lastContextTime=e,this.prevTime=this.time,this.time+=t;const s=this.time>=this.tracks.getDuration();if(s){this.stop(!0);return}this.onUpdate(),await n.checkAndLoadResources(this.tracks.getUniquePitches()),window.requestAnimationFrame(this.progress.bind(this))}stop(e=!1){this.playing=!1,this.time=0;for(const e of this.audio)e.stop();this.audio=[],this.requestRefresh(),e&&this.config.shouldLoop()&&this.play()}onUpdate(){this.requestRefresh();const n=this.tracks.getNotesThatStartPlaying(this.time);for(const e of n){const t=e.note;this.playSound(e.id,t),t.setPlaying(!0)}const e=this.config.getGridSubdivisions(),t=Math.round(this.time/e)*e,s=this.prevTime<t&&this.time>=t;s&&this.clickMetronome()}playSound(e,t){if(!t.useAudio)return;const s=n.playSound(e,t);this.audio.push(s)}clickMetronome(){if(!this.config.useMetronome())return;const n=this.config.getGridSubdivisions(),s=Math.round(this.time/n)*n;let o=this.config.metronomeVolume;const i=this.config.isStartOfMeasure(s),a=i?o:.5*o,r=.1,e=new t("M",s,r);e.setVolume(a),e.setVisual(!1),this.playSound(this.tracks.getMetronomeChannel(),e)}clear(){this.tracks.clear()}requestRefresh(){const e=new CustomEvent("refresh");this.node.dispatchEvent(e)}};window.PQ_MIDI={},window.addEventListener("load",function(){const t=[],e=document.getElementsByClassName("midi-player");for(let n=0;n<e.length;n++){const s=e[n];t.push(new m(n,s))}})})()